openapi: 3.0.0
info:
  title: Fusion Stock Analyst API
  description: AI-enhanced stock analysis platform with real-time signals and KPIs
  version: 1.7.4
  contact:
    name: Fusion Stock Analyst
    email: support@fusionanalyst.com

servers:
  - url: http://0.0.0.0:5000
    description: Development server

paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"

  /api/fusion/dashboard:
    get:
      summary: Get fusion dashboard data
      parameters:
        - name: forceRefresh
          in: query
          schema:
            type: boolean
        - name: tf
          in: query
          schema:
            type: string
            enum: [All, 3D, 5D, 10D, 15D, 30D]
      responses:
        '200':
          description: Dashboard data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardData'

  /api/equities/list:
    get:
      summary: Get equities list
      responses:
        '200':
          description: List of equity items
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array

  /api/equities/kpis:
    get:
      summary: Get equity KPIs
      parameters:
        - name: timeframe
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Equity KPIs

  /api/options/strangle/candidates:
    get:
      summary: Get options strangle candidates
      parameters:
        - name: underlying
          in: query
          schema:
            type: string
            example: "TCS"
        - name: expiry
          in: query
          schema:
            type: string
            format: date
            example: "2025-08-28"
      responses:
        '200':
          description: Strangle candidates
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    payoff:
                      type: number
                    margin:
                      type: number

  /api/commodities/signals:
    get:
      summary: Get commodity signals
      responses:
        '200':
          description: Commodity signals list

  /api/commodities/correlations:
    get:
      summary: Get commodity correlations
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: "GOLD"
      responses:
        '200':
          description: Correlation data

  /api/pins:
    get:
      summary: Get pinned items
      responses:
        '200':
          description: Pinned items
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
    post:
      summary: Update pinned items
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
      responses:
        '200':
          description: Success

  /api/locks:
    get:
      summary: Get locked items
      responses:
        '200':
          description: Locked items
    post:
      summary: Update locked items
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
      responses:
        '200':
          description: Success

  /api/kpi/metrics:
    get:
      summary: Get KPI metrics
      parameters:
        - name: timeframe
          in: query
          schema:
            type: string
            enum: [All, 3D, 5D, 10D, 15D, 30D]
            default: All
      responses:
        '200':
          description: KPI metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KPIMetrics'

  /docs:
    get:
      summary: Swagger UI Documentation
      description: Interactive API documentation using Swagger UI
      responses:
        '200':
          description: Swagger UI HTML page
          content:
            text/html:
              schema:
                type: string

  /api/agents/runs:
    get:
      tags:
        - Agents
      summary: Get agent run history
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [running, completed, failed]
      responses:
        '200':
          description: Agent runs
          content:
            application/json:
              schema:
                type: object
                properties:
                  runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/AgentRun'

  /api/papertrade/portfolio:
    get:
      tags:
        - Paper Trade
      summary: Get paper trade portfolio summary
      responses:
        '200':
          description: Portfolio summary with live P&L
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/PaperTradePortfolio'

  /api/papertrade/positions:
    get:
      tags:
        - Paper Trade
      summary: Get current paper trade positions
      responses:
        '200':
          description: Current positions with live P&L
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  positions:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaperTradePosition'

  /api/papertrade/orders:
    get:
      tags:
        - Paper Trade
      summary: Get paper trade order history
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: Order history
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaperTradeOrder'

  /api/papertrade/execute:
    post:
      tags:
        - Paper Trade
      summary: Execute paper trade at live market price
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - symbol
                - side
                - quantity
              properties:
                symbol:
                  type: string
                  example: "RELIANCE"
                side:
                  type: string
                  enum: [BUY, SELL]
                quantity:
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Trade executed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  order:
                    $ref: '#/components/schemas/PaperTradeOrder'
                  live_price:
                    type: number

  /api/papertrade/close:
    post:
      tags:
        - Paper Trade
      summary: Close paper trade position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - symbol
              properties:
                symbol:
                  type: string
                  example: "RELIANCE"
      responses:
        '200':
          description: Position closed successfully

  /api/papertrade/live-price/{symbol}:
    get:
      tags:
        - Paper Trade
      summary: Get live market price for symbol
      parameters:
        - name: symbol
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Live price data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  symbol:
                    type: string
                  price:
                    type: number
                  timestamp:
                    type: string

components:
  schemas:
    Error:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "not_found"
        message:
          type: string
          example: "Resource not found"

    KPIMetrics:
      type: object
      properties:
        timeframe:
          type: string
          example: "30D"
        prediction_accuracy:
          type: number
          format: float
          example: 0.72
        sharpe_ratio:
          type: number
          format: float
          example: 1.35
        sortino_ratio:
          type: number
          format: float
          example: 1.48
        max_drawdown:
          type: number
          format: float
          example: -0.08
        expectancy:
          type: number
          format: float
          example: 1.42
        coverage:
          type: number
          format: float
          example: 0.89
        last_updated:
          type: string
          format: date-time
          example: "2024-08-11T16:45:00Z"

    DashboardData:
      type: object
      properties:
        kpis:
          type: object
        timeframes:
          type: object
        top_signals:
          type: array
          items:
            $ref: '#/components/schemas/Signal'
        pinned_rollup:
          type: object
        alerts:
          type: array
          items:
            type: string
        insights:
          type: string

    Signal:
      type: object
      properties:
        symbol:
          type: string
          example: "TCS"
        product:
          type: string
          example: "Equity"
        signal_score:
          type: number
          format: float
          example: 8.7
        current_price:
          type: number
          format: float
          example: 4275.30
        target_price:
          type: number
          format: float
          example: 4500.00
        potential_roi:
          type: number
          format: float
          example: 0.0526
        ai_verdict:
          type: string
          enum: [STRONG_BUY, BUY, HOLD, CAUTIOUS, AVOID]
          example: "STRONG_BUY"
        confidence:
          type: number
          format: float
          example: 0.87

    AgentRun:
      type: object
      properties:
        run_id:
          type: string
        agent_name:
          type: string
        status:
          type: string
          enum: [running, completed, failed]
        started_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        inputs:
          type: object
        outputs:
          type: object

    PaperTradePortfolio:
      type: object
      properties:
        portfolio:
          type: object
          properties:
            initial_capital:
              type: number
            current_capital:
              type: number
            total_pnl:
              type: number
            realized_pnl:
              type: number
            unrealized_pnl:
              type: number
            last_updated:
              type: string
              format: date-time
        positions_count:
          type: integer
        total_trades:
          type: integer

    PaperTradePosition:
      type: object
      properties:
        position_id:
          type: string
        symbol:
          type: string
        quantity:
          type: integer
        avg_price:
          type: number
        current_price:
          type: number
        position_value:
          type: number
        cost_basis:
          type: number
        pnl:
          type: number
        pnl_percent:
          type: number
        created_at:
          type: string
          format: date-time
        last_updated:
          type: string
          format: date-time

    PaperTradeOrder:
      type: object
      properties:
        order_id:
          type: string
        symbol:
          type: string
        side:
          type: string
          enum: [BUY, SELL]
        quantity:
          type: integer
        order_type:
          type: string
        exec_price:
          type: number
        exec_value:
          type: number
        timestamp:
          type: string
          format: date-time
        status:
          type: string

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'